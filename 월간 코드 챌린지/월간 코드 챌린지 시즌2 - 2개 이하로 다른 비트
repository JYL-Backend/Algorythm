class Solution {
    public long[] solution(long[] numbers) {
        long[] answer = new long[numbers.length];
        
        for(int i=0; i< numbers.length; i++){
            long number = numbers[i];
            //짝수면 무조건 +1
            if(number%2==0){
                answer[i] = number+1;
                continue;
            }
            
            //홀수중 1만 따로 처리
            if(number==1){
                answer[i] = 2;
                continue;
            }
            String bits = Long.toBinaryString(number);
            
                // System.out.println("치환전 : " + bits);
            //만약 온통 1이면 앞에 1붙이고 처음 1을 0으로 바꿈
            if(bits.indexOf("0") < 0){
                bits = "10" + bits.substring(1);
            }
            //홀수면 가장 우측의 0을 1로 바꾸고 그 오른쪽 1을 0으로 바꿈
            else {
                int index0 = bits.lastIndexOf("0");
                int index1 = index0+1;
                
                bits = bits.substring(0,index0) + "10" + bits.substring(index1+1);
            }
                // System.out.println("치환후 : " + bits);
            answer[i] = Long.parseLong(bits, 2);
        }
        
        return answer;
    }
}

https://programmers.co.kr/learn/courses/30/lessons/77885#
