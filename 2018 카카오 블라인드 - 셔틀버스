import java.util.*;
class Solution {
    public String solution(int n, int t, int m, String[] timetable) {
        PriorityQueue<Integer> pQ = new PriorityQueue<>();
        for(String time : timetable){
            pQ.offer(getIntTime(time));
        }
        int lastCount = n*t*m;
        int startBusTime = 60*9;
        int nowBusTime = startBusTime;
        
        for(int i=0; i<n; i++){
            for(int j=0; j<m; j++){
//                 대기열에 사람이 없을 때 skip
                if(pQ.isEmpty() || pQ.peek() > nowBusTime) break;
//                 대기열에 사람이 있고 막차일 때
                if(i==n-1 && j == m-1){
                    return getStringTime(pQ.poll()-1);
                }
                pQ.poll();
            }
            nowBusTime += t;
        }
        return getStringTime(nowBusTime - t);
    }
    
    private int getIntTime(String time){
        String[] arr = time.split(":");
        int result = Integer.parseInt(arr[0]) * 60;
        result += Integer.parseInt(arr[1]);
        return result;
    }
    private String getStringTime(int time){
        String hour = String.valueOf(time/60);
        String minute = String.valueOf(time%60);
        
        hour = hour.length() == 2 ? hour : "0"+hour;
        minute = minute.length() == 2 ? minute : "0"+minute;
        
        return hour + ":" + minute;
    }
}

//https://programmers.co.kr/learn/courses/30/lessons/17678
